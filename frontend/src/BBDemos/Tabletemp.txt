import React, { Fragment, useEffect, useState } from 'react'
import DataTable from 'react-data-table-component';
import AxiosWrapper, { axiosWrapper2 } from './HTTP';

const axios = require('axios').default;

function Table(props) {

    const [data, setData] = useState(null);
    useEffect(() => { getData() }, []);

    function getData() {
        axios.get('http://127.0.0.1:8000/customusers/')
            .then(function (response) {
                const dataGot = response.data.results;
                setData(dataGot);
                console.log("Response:");
                console.log(response);
            })
            .catch(function (error) {
                // handle error
                console.log(error);
            });
    }

    function jsonDataToColumns(data) {
        const columnHeaders = Object.keys(data[0]);
        const columns = columnHeaders.map((header) => ({ name: header.toUpperCase(), selector: row => row[header] }));

        return columns;
    }


    if (data) {
        console.log(data);
        const columns = jsonDataToColumns(data);
        console.log(JSON.stringify(columns));
        return (
            <DataTable
                columns={jsonDataToColumns(data)}
                data={data}
            />
        )
    };
}


function Table3(props) {

    const [data, setData] = useState(null);

    useEffect(() => {
        axiosWrapper2("get", 'http://127.0.0.1:8000/customusers/')
        .then((result) => {setData(result)})
        .catch((error) => {console.log(error)});
    }, []);

    function jsonDataToColumns(data) {
        const columnHeaders = Object.keys(data[0]);
        const columns = columnHeaders.map((header) => ({ name: header.toUpperCase(), selector: row => row[header] }));
        return columns;
    }

    return (
        <DataTable
            columns={jsonDataToColumns(data)}
            data={data}
        />
    )
}
/*
function Table4() {

    data = 1
    
    if (data) {
        console.log("Data:")
        console.log(data);
        const columns = jsonDataToColumns(data);
        console.log(JSON.stringify(columns));
        return (
            <DataTable
                columns={jsonDataToColumns(data)}
                data={data}
            />
        )
    };
} */


export { Table, Table3 };